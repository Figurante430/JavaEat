/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poo.javaeat.interfaz;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import poo.javaeat.Catering;
import poo.javaeat.ClaseUtil;
import poo.javaeat.Cliente;
import poo.javaeat.Comida;
import poo.javaeat.Empresa;
import poo.javaeat.Particular;
import poo.javaeat.Restaurante;
import poo.javaeat.interfaz.VentanaCliente;
import java.util.Iterator;
import java.util.ArrayList;
/**
 *
 * @author gonza
 */
public class vcPedirCatering extends javax.swing.JDialog {
    
    //Atributos
    private String nombreImagen, rutaImagen, extension = "jpg";
    private File file;
    private BufferedImage bimage;
    private DefaultTableModel dtm1 = new DefaultTableModel();
    private DefaultTableModel dtm2 = new DefaultTableModel();
    private Restaurante res;
    private Empresa empresa = (Empresa) VentanaCliente.getCliente();
    private Catering cat;
    
    /**
     * Creates new form AltaComida
     */
    
    public vcPedirCatering(java.awt.Dialog parent, boolean modal, Restaurante res) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        this.res = res; 
        this.cat = empresa.crearCatering(); //se crea catering para poder modificarlo y annadirlo luego a la cesta
        precioText.setText(Double.toString(cat.getPrecio())); 
        String columnas1[] = {"NOMBRE", "INGREDIENTES", "PRECIO"};
        String columnas2[] = {"NOMBRE", "CANTIDAD"};
        dtm1.setColumnIdentifiers(columnas1);
        dtm2.setColumnIdentifiers(columnas2);
        tablaComidasDisponibles.setModel(dtm1);
        tablaComidasSeleccionadas.setModel(dtm2);
        rellenaTabla1();
        this.setVisible(true);
    }
    private void getImagen() {
        try {
            labelLogo.setSize(150, 118);
            ImageIcon imagen = new ImageIcon("imagenes/JavaEatLogo.png");
            //Se redimensiona
            ImageIcon imgRedimensionada = new ImageIcon(imagen.getImage().getScaledInstance(labelLogo.getWidth(), labelLogo.getHeight(), 1));
            labelLogo.setIcon(imgRedimensionada);
        } catch (Exception e) {
            System.out.println("Error: " + e.toString());
        }
    }
    //rellena la tabla de comidas disponibles
    public void rellenaTabla1() { 
        limpiaTabla1();
        for (Comida comida : res.getComidas()) {
            dtm1.addRow(new Object [] {comida.getTitulo(),comida.getIngredientes(),comida.getPrecio()});
        }
    }
    
    //rellena la tabal de comidas seleccionadas
    public void rellenaTabla2() { 
        limpiaTabla2();
        for (Map.Entry<String, Integer> c : cat.getCantComidas().entrySet()) {
            dtm2.addRow(new Object [] {c.getKey(),c.getValue()});
        }
    }
    
    public void limpiaTabla1() {
        int filas = dtm1.getRowCount();
        for (int i = 0; i < filas; i++) {
            dtm1.removeRow(0);
        }   
    }
    public void limpiaTabla2() {
        int filas = dtm2.getRowCount();
        for (int i = 0; i < filas; i++) {
            dtm2.removeRow(0);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelLogo = new javax.swing.JLabel();
        precioLabel = new javax.swing.JLabel();
        precioText = new javax.swing.JTextField();
        seleccionarComidaButton = new javax.swing.JButton();
        volverButton = new javax.swing.JButton();
        addCestaButton1 = new javax.swing.JButton();
        precioLabel1 = new javax.swing.JLabel();
        comidasSeleccionadasLabel = new javax.swing.JLabel();
        borrarButton = new javax.swing.JButton();
        comidasDisponiblesLabel = new javax.swing.JLabel();
        camarerosCB = new javax.swing.JCheckBox();
        cocinerosCB = new javax.swing.JCheckBox();
        decoracionCB = new javax.swing.JCheckBox();
        espacioCB = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaComidasDisponibles = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaComidasSeleccionadas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 102));

        jLabel1.setFont(new java.awt.Font("Roboto Black", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONSULTA CATERING");

        getImagen();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        precioLabel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        precioLabel.setText("PRECIO:");

        precioText.setEditable(false);
        precioText.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        precioText.setText("0.0");

        seleccionarComidaButton.setBackground(new java.awt.Color(255, 255, 102));
        seleccionarComidaButton.setText("SELECCIONAR");
        seleccionarComidaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarComidaButtonActionPerformed(evt);
            }
        });

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        addCestaButton1.setBackground(new java.awt.Color(255, 255, 102));
        addCestaButton1.setText("ADD CESTA");
        addCestaButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCestaButton1ActionPerformed(evt);
            }
        });

        precioLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        precioLabel1.setText("SERVICIOS:");

        comidasSeleccionadasLabel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        comidasSeleccionadasLabel.setText("Comidas seleccionadas:");

        borrarButton.setBackground(new java.awt.Color(255, 255, 102));
        borrarButton.setText("BORRAR");
        borrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtonActionPerformed(evt);
            }
        });

        comidasDisponiblesLabel.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        comidasDisponiblesLabel.setText("Comidas disponibles:");

        camarerosCB.setText("Camareros (800€)");
        camarerosCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camarerosCBActionPerformed(evt);
            }
        });

        cocinerosCB.setText("Cocineros (1000€)");
        cocinerosCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cocinerosCBActionPerformed(evt);
            }
        });

        decoracionCB.setText("Decoración (500€)");
        decoracionCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decoracionCBActionPerformed(evt);
            }
        });

        espacioCB.setText("Espacio Pricado (1000€)");
        espacioCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espacioCBActionPerformed(evt);
            }
        });

        tablaComidasDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Ingredientes", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaComidasDisponibles);

        jScrollPane3.setViewportView(jScrollPane1);

        tablaComidasSeleccionadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaComidasSeleccionadas);

        jScrollPane4.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comidasDisponiblesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comidasSeleccionadasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(seleccionarComidaButton)
                                        .addGap(35, 35, 35))
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane4))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(precioLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(precioLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(precioText, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(addCestaButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(decoracionCB)
                                                .addComponent(cocinerosCB)
                                                .addComponent(camarerosCB)
                                                .addComponent(espacioCB))))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(borrarButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(volverButton)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(volverButton)
                .addGap(18, 18, 18)
                .addComponent(comidasDisponiblesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seleccionarComidaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(comidasSeleccionadasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(precioLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(camarerosCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cocinerosCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decoracionCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(espacioCB)
                        .addGap(203, 203, 203)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precioText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precioLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(addCestaButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(borrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**Seleccionas la comida para poder pedirla en otra ventana
     * 
     * @param evt 
     */
    private void seleccionarComidaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarComidaButtonActionPerformed
        try{
            int fila = tablaComidasDisponibles.getSelectedRow();
            vcPedirComidaCatering cC = new vcPedirComidaCatering(this, true, res.getComidas().get(fila), cat);
            rellenaTabla2();
            precioText.setText(Double.toString(cat.sumaPrecios()));
        }
        catch(ArrayIndexOutOfBoundsException et) {
            JOptionPane.showMessageDialog(this, "Selecciona una fila ");
        }
        catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Selecciona una fila ");
        }
    }//GEN-LAST:event_seleccionarComidaButtonActionPerformed

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        dispose();
    }//GEN-LAST:event_volverButtonActionPerformed

    /**El catering se añada a la cesta
     * 
     * @param evt 
     */
    private void addCestaButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCestaButton1ActionPerformed
        if (cat.getComidasObj().isEmpty()){
            JOptionPane.showMessageDialog(this, "Error, el catering está vacío", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        else {
            int confirmar = JOptionPane.showConfirmDialog(this, "Estás seguro?", "Mensaje", JOptionPane.OK_CANCEL_OPTION);
            if (confirmar == 0) {
                empresa.addCatering(cat);
                JOptionPane.showMessageDialog(this, "Se ha añadido correctamente" , "Mensaje", JOptionPane.DEFAULT_OPTION);
                dispose();
            }           
        }
    }//GEN-LAST:event_addCestaButton1ActionPerformed

    /** Se borra una cantidad de comidas del arraylist del restaurante
     * 
     * @param evt 
     */
    private void borrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtonActionPerformed
        try{
            int fila = tablaComidasSeleccionadas.getSelectedRow();
            int columna = 0;
            Object nombreCom = tablaComidasSeleccionadas.getValueAt(fila, columna);
            String nombre = (String)nombreCom;
            ArrayList<Comida> copia =new ArrayList<>(cat.getComidasObj());
            for (Iterator<Comida> itr =copia.iterator();itr.hasNext();){
                Comida c= itr.next();
                if (c.getTitulo().equals(nombre)) {
                    String input = JOptionPane.showInputDialog(null, "Ingrese un número entero:");
                    try {
                         int numero = Integer.parseInt(input);
                        if (numero<=0 || numero>cat.getCantComidas().get(nombre)) { 
                            throw new numInvalidException("Cantidad inválida");
                        }
                        else{
                            cat.deleteComida(c, numero);
                            precioText.setText(Double.toString(cat.sumaPrecios())); 
                            rellenaTabla2();
                        }
                    }
                    catch (numInvalidException ni){
                        JOptionPane.showMessageDialog(this, ni.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
                    }
                
                    catch (NumberFormatException nfe) {
                        JOptionPane.showMessageDialog(this, nfe.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
        catch(ArrayIndexOutOfBoundsException et) {
            JOptionPane.showMessageDialog(this, "Selecciona una fila ");
        }
        catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Selecciona una fila ");
        }
    }//GEN-LAST:event_borrarButtonActionPerformed
// Metodos donde se añaden servicios al catering
    private void cocinerosCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cocinerosCBActionPerformed
        if (cocinerosCB.isSelected()) {
            cat.addServicio(ClaseUtil.cocineros);
            precioText.setText((Double.toString(cat.getPrecio())));
        }
        else {
            cat.moveServicio(ClaseUtil.cocineros);
            precioText.setText(Double.toString(cat.getPrecio()));
        }
    }//GEN-LAST:event_cocinerosCBActionPerformed

    private void camarerosCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camarerosCBActionPerformed
        if (camarerosCB.isSelected()) {
            cat.addServicio(ClaseUtil.camareros);
            precioText.setText((Double.toString(cat.getPrecio())));
        }
        else {
            cat.moveServicio(ClaseUtil.camareros);
            precioText.setText(Double.toString(cat.getPrecio()));
        }
    }//GEN-LAST:event_camarerosCBActionPerformed

    private void decoracionCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decoracionCBActionPerformed
        if (decoracionCB.isSelected()) {
            cat.addServicio(ClaseUtil.decoracion);
            precioText.setText((Double.toString(cat.getPrecio())));
        }
        else {
            cat.moveServicio(ClaseUtil.decoracion);
            precioText.setText(Double.toString(cat.getPrecio()));
        }
    }//GEN-LAST:event_decoracionCBActionPerformed

    private void espacioCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espacioCBActionPerformed
        if (espacioCB.isSelected()) {
            cat.setEspacioPrivado(true);
            precioText.setText(Double.toString(cat.getPrecio()));
        }
        else {
            cat.setPrecio(cat.getPrecio()-1000);
            cat.setEspacioPrivado(false);
            precioText.setText(Double.toString(cat.getPrecio()));
        }
    }//GEN-LAST:event_espacioCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCestaButton1;
    private javax.swing.JButton borrarButton;
    private javax.swing.JCheckBox camarerosCB;
    private javax.swing.JCheckBox cocinerosCB;
    private javax.swing.JLabel comidasDisponiblesLabel;
    private javax.swing.JLabel comidasSeleccionadasLabel;
    private javax.swing.JCheckBox decoracionCB;
    private javax.swing.JCheckBox espacioCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel precioLabel;
    private javax.swing.JLabel precioLabel1;
    private javax.swing.JTextField precioText;
    private javax.swing.JButton seleccionarComidaButton;
    private javax.swing.JTable tablaComidasDisponibles;
    private javax.swing.JTable tablaComidasSeleccionadas;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables
}
